"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const hsdatab = require("./");
const colNames = ['Name', 'Value', 'Start', 'End'];
const rows = [
    ['Harry', '100', '3/1/14', '11/20/14'],
    ['Mary', '1500', '7/1/14', '9/30/14'],
    ['Peter', '400', '5/20/14', '4/30/15'],
    ['Jane', '700', '11/13/14', '8/15/15']
];
const data = new hsdatab.Data({ colNames: colNames, rows: rows });
const queries = [
    [undefined, [0, 1, 2, 3]],
    [[], []],
    [{}, [0, 1, 2, 3]],
    [1, [1]],
    [[1, 3], [1, 3]],
    [{ Name: "Jane" }, [3]],
    [{ 1: 1500 }, [1]],
    [{ Name: ["Peter", "Jane"] }, [2, 3]],
    [[{ Name: "Peter" }, { Value: 1500 }], [1, 2]],
    [{ or: { Name: "Peter", Value: 1500 } }, [1, 2]],
    [{ or: [{ Name: "Peter" }, { Value: 1500 }] }, [1, 2]],
    [{ Name: "Peter", Value: 400 }, [2]],
    [{ and: { Name: "Peter", Value: 400 } }, [2]],
    [{ and: { Name: "Peter", Value: 1500 } }, []],
    [{ and: [{ Name: "Peter" }, { Value: 400 }] }, [2]],
    [{ and: [{ Name: "Peter" }, { Value: 1500 }] }, []],
    [{ not: { Name: "Peter", Value: 400 } }, [0, 1, 3]],
    [{ not: { Name: "Peter", Value: 1500 } }, [0, 1, 2, 3]],
    [{ not: [{ Name: "Peter" }, { Value: 1500 }] }, [0, 3]],
    [{ Name: (v) => v.length === 4 }, [1, 3]]
];
describe('Data Filters', () => {
    it('is created with 4 rows', () => expect(data.getData().length).toEqual(4));
    queries.forEach((q, i) => {
        const r = data.filter(q[0]);
        test(`query ${i}: ${JSON.stringify(q[0])} should yield ${JSON.stringify(q[1])}`, () => expect(r.getData().length).toEqual(q[1].length));
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0YUZpbHRlci5qZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0RhdGFGaWx0ZXIuamVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDhCQUFrQztBQUVsQyxNQUFNLFFBQVEsR0FBRyxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ25ELE1BQU0sSUFBSSxHQUFHO0lBQ1gsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxVQUFVLENBQUM7SUFDdEMsQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRyxTQUFTLENBQUM7SUFDdEMsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUM7SUFDdEMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxTQUFTLENBQUM7Q0FDdkMsQ0FBQztBQUVGLE1BQU0sSUFBSSxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFDLFFBQVEsRUFBQyxRQUFRLEVBQUUsSUFBSSxFQUFDLElBQUksRUFBQyxDQUFDLENBQUM7QUFDOUQsTUFBTSxPQUFPLEdBQXVCO0lBQ2hDLENBQUUsU0FBUyxFQUE0QixDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pELENBQUUsRUFBRSxFQUFtQyxFQUFTLENBQUM7SUFDakQsQ0FBRSxFQUFFLEVBQW1DLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakQsQ0FBRSxDQUFDLEVBQW9DLENBQUcsQ0FBQyxDQUFLLENBQUM7SUFDakQsQ0FBRSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBZ0MsQ0FBRyxDQUFDLEVBQUcsQ0FBQyxDQUFDLENBQUM7SUFDakQsQ0FBRSxFQUFDLElBQUksRUFBQyxNQUFNLEVBQUMsRUFBd0IsQ0FBTyxDQUFDLENBQUMsQ0FBQztJQUNqRCxDQUFFLEVBQUMsQ0FBQyxFQUFDLElBQUksRUFBQyxFQUE2QixDQUFHLENBQUMsQ0FBSyxDQUFDO0lBQ2pELENBQUUsRUFBQyxJQUFJLEVBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLEVBQUMsRUFBYSxDQUFLLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztJQUNqRCxDQUFFLENBQUMsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxLQUFLLEVBQUMsSUFBSSxFQUFDLENBQUMsRUFBTyxDQUFHLENBQUMsRUFBQyxDQUFDLENBQUcsQ0FBQztJQUNqRCxDQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUMsSUFBSSxFQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUMsSUFBSSxFQUFDLEVBQUMsRUFBTSxDQUFHLENBQUMsRUFBQyxDQUFDLENBQUcsQ0FBQztJQUNqRCxDQUFFLEVBQUMsRUFBRSxFQUFDLENBQUMsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxLQUFLLEVBQUMsSUFBSSxFQUFDLENBQUMsRUFBQyxFQUFFLENBQUcsQ0FBQyxFQUFDLENBQUMsQ0FBRyxDQUFDO0lBQ2pELENBQUUsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLEVBQUMsRUFBWSxDQUFLLENBQUMsQ0FBRyxDQUFDO0lBQ2pELENBQUUsRUFBQyxHQUFHLEVBQUMsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLEVBQUMsRUFBQyxFQUFNLENBQUssQ0FBQyxDQUFHLENBQUM7SUFDakQsQ0FBRSxFQUFDLEdBQUcsRUFBQyxFQUFDLElBQUksRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFDLElBQUksRUFBQyxFQUFDLEVBQUssRUFBUyxDQUFDO0lBQ2pELENBQUUsRUFBQyxHQUFHLEVBQUMsQ0FBQyxFQUFDLElBQUksRUFBQyxPQUFPLEVBQUMsRUFBRSxFQUFDLEtBQUssRUFBQyxHQUFHLEVBQUMsQ0FBQyxFQUFDLEVBQUUsQ0FBSyxDQUFDLENBQUcsQ0FBQztJQUNqRCxDQUFFLEVBQUMsR0FBRyxFQUFDLENBQUMsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxLQUFLLEVBQUMsSUFBSSxFQUFDLENBQUMsRUFBQyxFQUFDLEVBQVMsQ0FBQztJQUNqRCxDQUFFLEVBQUMsR0FBRyxFQUFDLEVBQUMsSUFBSSxFQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxFQUFDLEVBQUMsRUFBTSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUcsQ0FBQyxDQUFDLENBQUM7SUFDakQsQ0FBRSxFQUFDLEdBQUcsRUFBQyxFQUFDLElBQUksRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFDLElBQUksRUFBQyxFQUFDLEVBQUssQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztJQUNqRCxDQUFFLEVBQUMsR0FBRyxFQUFDLENBQUMsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxLQUFLLEVBQUMsSUFBSSxFQUFDLENBQUMsRUFBQyxFQUFDLENBQUMsQ0FBQyxFQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ2pELENBQUUsRUFBQyxJQUFJLEVBQUMsQ0FBQyxDQUFLLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLEtBQUcsQ0FBQyxFQUFDLEVBQU8sQ0FBRyxDQUFDLEVBQUcsQ0FBQyxDQUFDLENBQUM7Q0FDcEQsQ0FBQztBQUVGLFFBQVEsQ0FBQyxjQUFjLEVBQUUsR0FBRyxFQUFFO0lBQzFCLEVBQUUsQ0FBQyx3QkFBd0IsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzdFLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDckIsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1QixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFDM0UsR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUN4RCxDQUFDO0lBQ04sQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQyJ9